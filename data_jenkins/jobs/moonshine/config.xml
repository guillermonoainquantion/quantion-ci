<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.10">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.27">
    <script>node {
    def nodeHome = tool name: &apos;node-5.10.1&apos;, type: &apos;jenkins.plugins.nodejs.tools.NodeJSInstallation&apos;
    env.PATH = &quot;${nodeHome}/bin:${env.PATH}&quot;

    stage &apos;Check Environment&apos;
        sh &quot;docker ps&quot;
        sh &quot;node -v&quot;
        sh &quot;npm -v&quot;
        sh &quot;karma --version&quot;
        echo sh(returnStdout: true, script: &apos;env&apos;)

    stage &apos;Checkout&apos;
        git([credentialsId: &apos;d29162f2-66ea-4128-b754-dd4d43861a91&apos;, url: &apos;https://github.com/geci/moonshine2.git&apos;, branch: &apos;ci&apos;])

    stage &apos;Install Dependencies&apos;
        sh &apos;npm install&apos;

      stage(&apos;SonarQube analysis&apos;) {
        // requires SonarQube Scanner 2.8+
        def scannerHome = tool &apos;Sonar Scanner&apos;;
        withSonarQubeEnv(&apos;Sonar Server&apos;) {
        //   sh &quot;${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=moonshine -Dsonar.sources=. -Dsonar.inclusions=app/**/manager/**/* -Dsonar.analysis.mode=preview -Dsonar.github.pullRequest=7 -Dsonar.github.repository=gnoain-org/cities -Dsonar.github.oauth=6157182195c11ea969bdc556a13752163eec9c16 &quot;
          sh &quot;${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=moonshine -Dsonar.sources=. -Dsonar.inclusions=app/**/manager/**/*&quot;
        }
      }

    // stage &apos;Backend Tests&apos;
    //     sh &apos;npm run testBackCoverage --site=api_gateway --unit&apos;

    // stage &apos;Frontend Tests&apos;
    //     sh &apos;npm run testFront --site=manager&apos;
    
    // stage &apos;Build&apos;
    //     sh &apos;NODE_ENV=uat webpack --config ./app/angular/manager/config/webpack.config.js&apos;    
    //     sh &apos;grunt less&apos;    
    
    // stage &apos;Start App&apos;
    //     sh &apos;NODE_ENV=uat npm start --site=manager&apos;

    // docker.withRegistry(&apos;https://registry.quantion.com&apos;) {
    //     stage &apos;Build Docker Image&apos;
    //         def cities = docker.build &quot;gnoain/cities:${env.BUILD_TAG}&quot;

    //     cities.inside {
    //         stage &apos;Run Back End Test In Container&apos;
    //             sh &apos;npm test&apos;
    //         stage &apos;Run Front End Test In Container&apos;
    //             sh &apos;karma start&apos;
    //     }

    //     stage &apos;Push to registry.quantion.com&apos;
    //         cities.push()
    // }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
</flow-definition>